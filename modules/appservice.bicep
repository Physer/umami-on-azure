param location string = resourceGroup().location
param skuSize string = 'B1'
param skuTier string = 'Basic'
param skuFamily string = 'B'
param virtualNetworkName string
param subnetName string

resource appServicePlan 'Microsoft.Web/serverfarms@2024-11-01' = {
  name: 'plan-schouls-umami-${uniqueString(resourceGroup().id)}'
  location: location
  sku: {
    name: skuSize
    tier: skuTier
    size: skuSize
    family: skuFamily
    capacity: 1
  }
  properties: {
    reserved: true
  }
}

var publicNetworkAccess string = 'Enabled'

resource appService 'Microsoft.Web/sites@2024-11-01' = {
  name: 'app-schouls-umami-${uniqueString(resourceGroup().id)}'
  location: location
  properties: {
    serverFarmId: appServicePlan.id
    autoGeneratedDomainNameLabelScope: 'SubscriptionReuse'
    httpsOnly: true
    publicNetworkAccess: publicNetworkAccess
    outboundVnetRouting: {
      allTraffic: true
    }
    reserved: true
    siteConfig: {
      alwaysOn: true
      http20Enabled: true
      linuxFxVersion: 'NODE|22-lts'
      nodeVersion: '22-lts'
      publicNetworkAccess: publicNetworkAccess
      vnetName: virtualNetworkName
      vnetRouteAllEnabled: true
    }
    virtualNetworkSubnetId: resourceId('Microsoft.Network/virtualNetworks/subnets', virtualNetworkName, subnetName)
  }
  kind: 'app,linux'
}

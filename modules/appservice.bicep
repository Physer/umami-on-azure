param location string = resourceGroup().location
param skuSize string = 'B1'
param skuTier string = 'Basic'
param skuFamily string = 'B'

param applicationName string
param virtualNetworkName string
param subnetName string
@secure()
param appSecret string
@secure()
param databaseConnectionString string

var imageName = 'ghcr.io/umami-software/umami'
var imageTag = 'postgresql-latest'

resource appServicePlan 'Microsoft.Web/serverfarms@2024-11-01' = {
  name: 'plan-${applicationName}'
  location: location
  sku: {
    name: skuSize
    tier: skuTier
    size: skuSize
    family: skuFamily
    capacity: 1
  }
  properties: {
    reserved: true
  }
}

var publicNetworkAccess string = 'Enabled'

resource appService 'Microsoft.Web/sites@2024-11-01' = {
  name: 'app-${applicationName}'
  location: location
  properties: {
    serverFarmId: appServicePlan.id
    autoGeneratedDomainNameLabelScope: 'SubscriptionReuse'
    httpsOnly: true
    publicNetworkAccess: publicNetworkAccess
    outboundVnetRouting: {
      allTraffic: true
    }
    reserved: true
    siteConfig: {
      appSettings: [
        {
          name: 'DATABASE_TYPE'
          value: 'postgresql'
        }
        {
          name: 'DATABASE_URL'
          value: databaseConnectionString
        }
        {
          name: 'APP_SECRET'
          value: appSecret
        }
      ]
      alwaysOn: true
      http20Enabled: true
      linuxFxVersion: 'DOCKER|${imageName}:${imageTag}'
      publicNetworkAccess: publicNetworkAccess
      vnetName: virtualNetworkName
      vnetRouteAllEnabled: true
    }
    virtualNetworkSubnetId: resourceId('Microsoft.Network/virtualNetworks/subnets', virtualNetworkName, subnetName)
  }
  kind: 'app,linux,container'
}
